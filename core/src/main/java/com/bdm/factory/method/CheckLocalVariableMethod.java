/*******************************************************************************
 *
 *	Copyright (c) 2022 Malthe Dalgaard Jensen & Kristoffer Stampe Villadsen.
 *
 *	Author: Malthe Dalgaard Jensen & Kristoffer Stampe Villadsen
 *
 *	This file is part of BDMCore.
 *
 *	BDMCore is free software: you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation, either version 3 of the License, or
 *	(at your option) any later version.
 *
 *	BDMCore is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with BDMCore.  If not, see <http://www.gnu.org/licenses/>.
 *	SPDX-License-Identifier: GPL-3.0-or-later
 *
 ******************************************************************************/
package com.bdm.factory.method;

import com.bdm.AnnotationTypes;

import javassist.CtClass;
import javassist.CtMethod;
import javassist.CtNewMethod;

public class CheckLocalVariableMethod implements IMethod{
    /* This creates the boilerplate helper function which is applied to all Java Class Object generated by BDM, This initates the temporary object in VDMJ using the VDMJ run command. */
    @Override
    public CtMethod Create(String TemporaryObjectName, String functionName, String[] parametersParam,
            AnnotationTypes annotationType, String annotationValue, CtClass declaringClass, Boolean pending)
            throws Exception {

        String bodyHelper = String.format("{try { run(\"%s\"); } catch (Exception e) {if(e.getMessage().contains(\"Error 3182:\")) {create(\"%s\",\"%s\");}}}",TemporaryObjectName,TemporaryObjectName,"new "+functionName+"()");
        CtMethod newMethod = CtNewMethod.make(CtClass.voidType, "checkLocalVariable", null, null, bodyHelper, declaringClass);
        return newMethod;
    }
    
}
